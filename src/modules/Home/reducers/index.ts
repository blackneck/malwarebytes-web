import { handleActions } from "redux-actions";

import { WebSocketNotification } from "../../../common/WebSocketListener/types";
import * as actions from "../actions";
import { HomeState, Product } from "../types";

const initialState: HomeState = {
  products: [],
  page: 1,
  isLoading: false,
  currentProduct: undefined,
};

export default handleActions(
  {
    // @ts-ignore
    [actions.notifyProducts]: (
      state: HomeState,
      { payload }: { payload: WebSocketNotification }
    ) => ({
      ...state,
      products: state.products.map((product) =>
        product._id === payload._id
          ? { ...product, quantity: product.quantity + payload.delta }
          : product
      ),
    }),
    // @ts-ignore
    [actions.setCurrentProduct]: (
      state: HomeState,
      { payload }: { payload: Product }
    ): HomeState => ({
      ...state,
      currentProduct: payload,
    }),
    // @ts-ignore
    [actions.getProductsSuccess]: (
      state: HomeState,
      { payload }: { payload: { data: Array<Product>; page: number } }
    ): HomeState => {
      return {
        ...state,
        isLoading: false,
        products: payload.page
          ? [...state.products, ...payload.data]
          : payload.data,
        page: payload.page ? payload.page : 1,
      };
    },
  },
  initialState
);
