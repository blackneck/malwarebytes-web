import React, { useCallback, useMemo } from "react";
import { useDispatch, useSelector } from "react-redux";

import { updateProductRequest } from "../../Cart/actions";
import { getCart } from "../../Cart/selectors";
import { setCurrentProduct } from "../actions";
import ProductModal from "../components/ProductModal";
import { getCurrentProduct } from "../selectors";

const ProductModalContainer = () => {
  const dispatch = useDispatch();

  const currentProduct = useSelector(getCurrentProduct);
  const { [currentProduct?._id || ""]: _amountInCart } = useSelector(getCart);

  const closeModal = useCallback(() => {
    dispatch(setCurrentProduct(undefined));
  }, [dispatch]);

  const addToCart = useCallback(() => {
    dispatch(updateProductRequest({ id: currentProduct?._id, delta: -1 }));
  }, [dispatch, currentProduct]);

  const removeFromCart = useCallback(() => {
    dispatch(updateProductRequest({ id: currentProduct?._id, delta: 1 }));
  }, [dispatch, currentProduct]);

  const amountInCart = useMemo(() => (_amountInCart ? _amountInCart : 0), [
    _amountInCart,
  ]);

  return (
    <ProductModal
      currentProduct={currentProduct}
      closeModal={closeModal}
      addToCart={addToCart}
      removeFromCart={removeFromCart}
      amountInCart={amountInCart}
    />
  );
};

export default ProductModalContainer;
