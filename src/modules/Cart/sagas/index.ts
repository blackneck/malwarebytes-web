import { all, call, put, takeEvery } from "redux-saga/effects";

import { makeRequest } from "../../../services/api/axios";
import { updateProductsRequestConfig } from "../../../services/api/products";
import { UpdateProductsParameters } from "../../../services/api/types";

import * as actions from "../actions";

export function* handleUpdateProductsRequest({
  payload,
}: {
  payload: UpdateProductsParameters;
}) {
  try {
    yield call(makeRequest, updateProductsRequestConfig({ ...payload }));

    yield put(actions.updateProductSuccess());
  } catch (error) {
    yield put(actions.updateProductFail(payload));
  }
}

export default function* homeSaga() {
  yield all([
    takeEvery(actions.updateProductRequest, handleUpdateProductsRequest),
  ]);
}
